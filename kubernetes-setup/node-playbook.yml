---
- hosts: all
  become: true
  vars:
    k8s_packages:
      - kubernetes-cni
      - kubelet
      - kubeadm
      - kubectl
    k8s_url_apt_key: "https://pkgs.k8s.io/core:/stable:/v1.31/deb/Release.key"
    k8s_gpgpath: /usr/share/keyrings/kubernetes-apt-keyring.gpg
    k8s_repository: "https://pkgs.k8s.io/core:/stable:/v1.31/deb/"

  tasks:
  - name: Install necessary packages
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - apt-transport-https
      - ca-certificates
      - curl
      - software-properties-common 
      - gnupg2
      - net-tools

  - name: Install containerd
    apt: 
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - containerd

  - name: Remove swapfile from /etc/fstab
    mount:
      name: "{{ item }}"
      fstype: swap
      state: absent
    with_items:
      - swap
      - none

  - name: Disable swap
    command: swapoff -a
    when: ansible_swaptotal_mb > 0

  - name: Get Kubernetes package key
    shell: curl -fsSL {{ k8s_url_apt_key }} | gpg --dearmor -o {{ k8s_gpgpath }}
    args:
      creates: "{{ k8s_gpgpath }}"
    vars:
      k8s_url_apt_key: "https://pkgs.k8s.io/core:/stable:/v1.28/deb/Release.key"
      k8s_gpgpath: /usr/share/keyrings/kubernetes-apt-keyring.gpg
      k8s_repository: "https://pkgs.k8s.io/core:/stable:/v1.28/deb/"

  - name: Install Kubernetes repository
    apt_repository:
      filename: kubernetes
      repo: "deb [signed-by={{ k8s_gpgpath }}] {{ k8s_repository }} /"

  - name: Install Kubernetes Packages
    package: name={{ item }} state=present force=yes install_recommends=no
    loop: "{{ k8s_packages }}"

  - name: Configure containerd
    blockinfile:
      create: true
      path: /etc/modules-load.d/containerd.conf
      block: |
        overlay
        br_netfilter

  - name: Enable kernel modules
    shell: |
      modprobe overlay
      modprobe br_netfilter

  - name: Configure IP forwarding and iptables
    blockinfile:
      create: true
      path: /etc/sysctl.conf
      block: |
        net.bridge.bridge-nf-call-iptables = 1
        net.ipv4.ip_forward = 1

  - name: Persist changes
    command: sysctl -p

  - name: Get IP eth1 addr
    shell: ifconfig eth1 | grep 'inet' | cut -d{{':'}} -f2 | awk '{ print $2 }'
    register: output

  - name: Configure kubelet
    lineinfile:
      path: /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
      line: Environment="KUBELET_EXTRA_ARGS=--node-ip={{ output.stdout }}"

  - name: Copy the join command to server location
    copy: src=join-command dest=/tmp/join-command.sh mode=0777

  - name: Join the node to cluster
    command: sh /tmp/join-command.sh
